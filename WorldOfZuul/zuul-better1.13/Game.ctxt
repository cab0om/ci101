#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment1.params=x
comment1.target=void\ display(java.lang.String)
comment1.text=\r\n\ In\ case\ debug_mode\ is\ true,\ the\ display\ method\ handles\ all\ output\ to\ terminal\ window.\r\n
comment10.params=command
comment10.target=void\ goExam(Command)
comment11.params=command
comment11.target=boolean\ quit(Command)
comment11.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment3.params=args
comment3.target=void\ main(java.lang.String[])
comment3.text=\r\n\ Calls\ a\ main\ method\ to\ perform\ a\ new\ Game()\ method\ and\ start\ playing\ the\ game.\r\n\ It's\ necessary\ to\ be\ able\ to\ play\ the\ game\ outside\ of\ BlueJ\ environment.\r\n
comment4.params=
comment4.target=void\ play()
comment4.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment6.params=command
comment6.target=boolean\ processCommand(Command)
comment6.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment7.params=
comment7.target=void\ goBack()
comment7.text=\r\n\ A\ method\ to\ go\ back\ to\ the\ last\ stored\ room.\r\n\ If\ the\ stack\ named\ previousRooms\ is\ NOT\ empty,\ it\ adds\ the\ current\ room\ to\ our\ Stack\ and\ \r\n\ displays\ our\ current\ room.\r\n
comment8.params=
comment8.target=void\ printHelp()
comment8.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment9.params=command
comment9.target=void\ goRoom(Command)
comment9.text=\ \r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
numComments=12
